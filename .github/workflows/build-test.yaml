name: Build Test with reduced packages set

# Using a reduced set of platforms. v6 and v7 is rarely used.
# platforms: linux/amd64,linux/arm64,linux/arm/v8,linux/arm/v7,linux/arm/v6

on:
  workflow_dispatch: {}
  push:
    branches:
      - "*-test"

    tags:
      - '*-test'

jobs:
  import-next-tag:
    uses: ./.github/workflows/next-tag.yaml
    # "${{ needs.import-next-tag.outputs.next_tag }}"
  export-vars:
    needs: import-next-tag
    runs-on: ubuntu-latest
    steps:
      - name: Export environment
        id: set-vars
        run: |
          ENVIRONMENT=test
          NEXT_TAG=${{ needs.import-next-tag.outputs.next_tag }}
          TAG="${NEXT_TAG}-${ENVIRONMENT}"
          echo "next_tag=${NEXT_TAG}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "environment=${ENVIRONMENT}" >> $GITHUB_OUTPUT
    outputs:
      next_tag: ${{ steps.set-vars.outputs.next_tag }}
      tag: ${{ steps.set-vars.outputs.tag }}
      environment: ${{ steps.set-vars.outputs.environment }}
  build-test-image:
    needs: export-vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get Packages and plugins to install
        id: file-content
        run: |
          PACKAGES="$(cat env/${ENVIRONMENT}/packagelist.txt|xargs)"
          KREWPLUGINS="$(cat env/${ENVIRONMENT}/krewplugins.txt|xargs)"
          PLATFORMS="$(cat env/${ENVIRONMENT}/platforms.txt|xargs|sed -e 's/ /,/g')"
          echo "packages=${PACKAGES}" >> $GITHUB_OUTPUT
          echo "krewplugins=${KREWPLUGINS}" >> $GITHUB_OUTPUT
          echo "platforms=${PLATFORMS}" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ needs.export-vars.outputs.next_tag }}
            ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:latest-${{ needs.export-vars.outputs.environment }}
          platforms: '${{ steps.file-content.outputs.platforms }}'
          build-args: |
            PACKAGES=${{ steps.file-content.outputs.packages }}
            KREWPLUGINS=${{ steps.file-content.outputs.krewplugins }}
            SKIP_SHELL_UTILS=true
            SKIP_FETCH_BINARIES=true
  helm-chart-test:
    runs-on: ubuntu-latest
    needs:
      - export-vars
      - build-test-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.16.0 # Use the latest version

      - name: Update Helm Chart values.yaml
        run: |
          sed -i charts/batbelt/values.yaml -e "s/tag: latest/tag: ${{ needs.export-vars.outputs.next_tag }}/g"
          sed -i charts/batbelt/Chart.yaml -e "s/name: batbelt/name: batbelt/g"
          sed -i charts/batbelt/Chart.yaml -e "s/appVersion: 0.0.0/appVersion: v${{ needs.export-vars.outputs.next_tag }}/g"
          sed -i charts/batbelt/Chart.yaml -e "s/version: v1.0.0/version: v${{ needs.export-vars.outputs.next_tag }}/g"
          cat charts/batbelt/values.yaml
          cat charts/batbelt/Chart.yaml

      - name: Chart Push
        uses: appany/helm-oci-chart-releaser@v0.4.2
        with:
          name: batbelt
          repository: thekoma/charts
          tag: ${{ needs.export-vars.outputs.next_tag }}
          path: charts/batbelt
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
